#NEXUS

[ID: 1412302423]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 48,
    2 40,
    3 41,
    4 50,
    5 36,
    6 37,
    7 34,
    8 35,
    9 3,
   10 16,
   11 17,
   12 4,
   13 23,
   14 5,
   15 1,
   16 2,
   17 28,
   18 27,
   19 8,
   20 9,
   21 33,
   22 25,
   23 26,
   24 18,
   25 19,
   26 38,
   27 29,
   28 30,
   29 49,
   30 42,
   31 31,
   32 32,
   33 46,
   34 20,
   35 21,
   36 44,
   37 45,
   38 43,
   39 24,
   40 22,
   41 14,
   42 15,
   43 6,
   44 7,
   45 47,
   46 10,
   47 11,
   48 39,
   49 12,
   50 13;
   tree tree_1 [p = 0.507, P = 0.507] = [&W 0.507463] ((((((((((50,49),48),(47,46)),(44,43)),((38,37),((((42,41),40),39),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),(18,(((20,17),(19,16)),(15,14)))),((13,(11,10)),(12,9))),(((25,24),(23,(22,21))),(8,7)))),((6,5),4)),(1,(3,2)));
   tree tree_2 [p = 0.259, P = 0.766] = [&W 0.258529] ((((((((((50,49),48),(47,46)),(44,43)),((38,37),((((42,41),40),39),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),(18,(((20,17),(19,16)),(15,14)))),((13,(11,10)),(12,9))),(((25,24),((23,22),21)),(8,7)))),((6,5),4)),(1,(3,2)));
   tree tree_3 [p = 0.088, P = 0.854] = [&W 0.088220] ((((((((((50,49),48),(47,46)),(44,43)),((((42,41),40),39),((38,37),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),(18,(((20,17),(19,16)),(15,14)))),((13,(11,10)),(12,9))),(((25,24),(23,(22,21))),(8,7)))),((6,5),4)),(1,(3,2)));
   tree tree_4 [p = 0.035, P = 0.890] = [&W 0.035448] ((((((((((50,49),48),(47,46)),(44,43)),((((42,41),40),39),((38,37),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),(18,(((20,17),(19,16)),(15,14)))),((13,(11,10)),(12,9))),(((25,24),((23,22),21)),(8,7)))),((6,5),4)),(1,(3,2)));
   tree tree_5 [p = 0.032, P = 0.922] = [&W 0.031983] ((((((((((50,49),48),(47,46)),(44,43)),((38,37),((((42,41),40),39),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),(18,((20,17),((19,16),(15,14))))),((13,(11,10)),(12,9))),(((25,24),((23,22),21)),(8,7)))),((6,5),4)),(1,(3,2)));
   tree tree_6 [p = 0.031, P = 0.953] = [&W 0.031183] ((((((((((50,49),48),(47,46)),(44,43)),((38,37),((((42,41),40),39),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),(18,((20,17),((19,16),(15,14))))),((13,(11,10)),(12,9))),(((25,24),(23,(22,21))),(8,7)))),((6,5),4)),(1,(3,2)));
   tree tree_7 [p = 0.011, P = 0.964] = [&W 0.011461] (((((((((50,49),48),(47,46)),(44,43)),((((42,41),40),39),((38,37),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),(18,(((20,17),(19,16)),(15,14)))),((13,(11,10)),(12,9))),(((25,24),((23,22),21)),(8,7)))),(((6,5),4),(1,(3,2))));
   tree tree_8 [p = 0.006, P = 0.970] = [&W 0.005597] ((((((((((50,49),48),(47,46)),(44,43)),((38,37),((((42,41),40),39),36))),(45,((32,31),30))),(((35,34),33),29)),(((18,(((20,17),(19,16)),(15,14))),(((28,27),26),((13,(11,10)),(12,9)))),(((25,24),((23,22),21)),(8,7)))),((6,5),4)),(1,(3,2)));
   tree tree_9 [p = 0.005, P = 0.975] = [&W 0.005330] ((((((((((50,49),48),(47,46)),(44,43)),((((42,41),40),39),((38,37),36))),(45,((32,31),30))),(((35,34),33),29)),(((13,(11,10)),(12,9)),((((28,27),26),((20,17),(18,((19,16),(15,14))))),(((25,24),((23,22),21)),(8,7))))),((6,5),4)),(1,(3,2)));
   tree tree_10 [p = 0.004, P = 0.979] = [&W 0.003731] (((6,5),4),(((((((((50,49),48),(47,46)),(44,43)),((((42,41),40),39),((38,37),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),(18,((20,17),((19,16),(15,14))))),((13,(11,10)),(12,9))),(((25,24),((23,22),21)),(8,7)))),(1,(3,2))));
   tree tree_11 [p = 0.003, P = 0.982] = [&W 0.002932] ((((((((((50,49),48),(47,46)),(44,43)),((((42,41),40),39),((38,37),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),(18,((20,17),((19,16),(15,14))))),((13,(11,10)),(12,9))),(((25,24),(23,(22,21))),(8,7)))),((6,5),4)),(1,(3,2)));
   tree tree_12 [p = 0.003, P = 0.985] = [&W 0.002665] (((6,5),4),(((((((((50,49),48),(47,46)),(44,43)),((38,37),((((42,41),40),39),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),(18,((20,17),((19,16),(15,14))))),((13,(11,10)),(12,9))),(((25,24),(23,(22,21))),(8,7)))),(1,(3,2))));
   tree tree_13 [p = 0.003, P = 0.987] = [&W 0.002665] ((((((((((50,49),48),(47,46)),(44,43)),((38,37),((((42,41),40),39),36))),(45,((32,31),30))),(((35,34),33),29)),((((28,27),26),((18,(((20,17),(19,16)),(15,14))),((13,(11,10)),(12,9)))),(((25,24),(23,(22,21))),(8,7)))),((6,5),4)),(1,(3,2)));
   tree tree_14 [p = 0.002, P = 0.989] = [&W 0.001866] ((((((((((50,49),48),(47,46)),(44,43)),((((42,41),40),39),((38,37),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),(18,((20,17),((19,16),(15,14))))),((13,(11,10)),(12,9))),(((25,24),((23,22),21)),(8,7)))),((6,5),4)),(1,(3,2)));
   tree tree_15 [p = 0.002, P = 0.991] = [&W 0.001866] (((6,5),4),(((((((((50,49),48),(47,46)),(44,43)),((((42,41),40),39),((38,37),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),((20,17),(18,((19,16),(15,14))))),((13,(11,10)),(12,9))),(((25,24),((23,22),21)),(8,7)))),(1,(3,2))));
   tree tree_16 [p = 0.002, P = 0.993] = [&W 0.001866] (((((((((50,49),48),(47,46)),(44,43)),(((38,37),((((42,41),40),39),36)),(45,((32,31),30)))),(((35,34),33),29)),(((((28,27),26),(18,(((20,17),(19,16)),(15,14)))),((13,(11,10)),(12,9))),(((25,24),((23,22),21)),(8,7)))),((6,5),4)),(1,(3,2)));
   tree tree_17 [p = 0.002, P = 0.994] = [&W 0.001599] (((((((((50,49),48),(47,46)),(44,43)),((38,37),((((42,41),40),39),36))),(45,((32,31),30))),(((35,34),33),29)),(((18,(((20,17),(19,16)),(15,14))),(((28,27),26),((13,(11,10)),(12,9)))),(((25,24),((23,22),21)),(8,7)))),(((6,5),4),(1,(3,2))));
   tree tree_18 [p = 0.002, P = 0.996] = [&W 0.001599] (((((((((50,49),48),(47,46)),(44,43)),((38,37),((((42,41),40),39),36))),(45,((32,31),30))),(((35,34),33),29)),((((28,27),26),((18,(((20,17),(19,16)),(15,14))),((13,(11,10)),(12,9)))),(((25,24),(23,(22,21))),(8,7)))),(((6,5),4),(1,(3,2))));
   tree tree_19 [p = 0.001, P = 0.997] = [&W 0.001066] ((((((((((50,49),48),(47,46)),(44,43)),((38,37),((((42,41),40),39),36))),(45,((32,31),30))),(((35,34),33),29)),(((13,(11,10)),(12,9)),((((28,27),26),((20,17),(18,((19,16),(15,14))))),(((25,24),((23,22),21)),(8,7))))),((6,5),4)),(1,(3,2)));
   tree tree_20 [p = 0.001, P = 0.998] = [&W 0.001066] (((6,5),4),(((((((((50,49),48),(47,46)),(44,43)),((((42,41),40),39),((38,37),36))),(45,((32,31),30))),(((35,34),33),29)),(((13,(11,10)),(12,9)),((((28,27),26),((20,17),(18,((19,16),(15,14))))),(((25,24),((23,22),21)),(8,7))))),(1,(3,2))));
   tree tree_21 [p = 0.001, P = 0.999] = [&W 0.000800] ((((((((((50,49),48),(47,46)),(44,43)),((38,37),((((42,41),40),39),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),((20,17),(18,((19,16),(15,14))))),((13,(11,10)),(12,9))),(((25,24),((23,22),21)),(8,7)))),((6,5),4)),(1,(3,2)));
   tree tree_22 [p = 0.000, P = 0.999] = [&W 0.000267] (((6,5),4),(((((((((50,49),48),(47,46)),(44,43)),((((42,41),40),39),((38,37),36))),(45,((32,31),30))),(((35,34),33),29)),(((13,(11,10)),(12,9)),((((28,27),26),(18,((20,17),((19,16),(15,14))))),(((25,24),((23,22),21)),(8,7))))),(1,(3,2))));
   tree tree_23 [p = 0.000, P = 0.999] = [&W 0.000267] ((((((((((50,49),48),(47,46)),(44,43)),((38,37),((((42,41),40),39),36))),(45,((32,31),30))),(((35,34),33),29)),(((13,(11,10)),(12,9)),((((28,27),26),(18,(((20,17),(19,16)),(15,14)))),(((25,24),(23,(22,21))),(8,7))))),((6,5),4)),(1,(3,2)));
   tree tree_24 [p = 0.000, P = 1.000] = [&W 0.000267] (((6,5),4),(((((((((50,49),48),(47,46)),(44,43)),((((42,41),40),39),((38,37),36))),(45,((32,31),30))),(((35,34),33),29)),(((((28,27),26),(18,((20,17),((19,16),(15,14))))),((13,(11,10)),(12,9))),(((25,24),(23,(22,21))),(8,7)))),(1,(3,2))));
   tree tree_25 [p = 0.000, P = 1.000] = [&W 0.000267] ((((((((((50,49),48),(47,46)),(44,43)),((38,37),((((42,41),40),39),36))),(45,((32,31),30))),(((35,34),33),29)),((((28,27),26),((18,(((20,17),(19,16)),(15,14))),((13,(11,10)),(12,9)))),(((25,24),((23,22),21)),(8,7)))),((6,5),4)),(1,(3,2)));
end;
