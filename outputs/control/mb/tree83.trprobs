#NEXUS

[ID: 2671969149]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 49,
    2 14,
    3 15,
    4 20,
    5 26,
    6 35,
    7 46,
    8 10,
    9 9,
   10 23,
   11 37,
   12 34,
   13 30,
   14 31,
   15 50,
   16 39,
   17 40,
   18 32,
   19 33,
   20 44,
   21 6,
   22 7,
   23 48,
   24 47,
   25 41,
   26 36,
   27 42,
   28 3,
   29 2,
   30 8,
   31 1,
   32 13,
   33 18,
   34 24,
   35 45,
   36 43,
   37 16,
   38 17,
   39 38,
   40 29,
   41 21,
   42 22,
   43 25,
   44 11,
   45 12,
   46 5,
   47 19,
   48 4,
   49 27,
   50 28;
   tree tree_1 [p = 0.272, P = 0.272] = [&W 0.272388] (((((38,37),36),35),(34,(33,((32,30),((31,29),28))))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_2 [p = 0.163, P = 0.435] = [&W 0.162580] (((((38,37),36),35),(34,(33,((32,30),((31,29),28))))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_3 [p = 0.099, P = 0.534] = [&W 0.099147] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_4 [p = 0.076, P = 0.611] = [&W 0.076493] (((((38,37),36),35),(((34,33),(32,30)),((31,29),28))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_5 [p = 0.057, P = 0.668] = [&W 0.057303] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_6 [p = 0.046, P = 0.714] = [&W 0.045842] (((((38,37),36),35),(((34,33),(32,30)),((31,29),28))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_7 [p = 0.031, P = 0.744] = [&W 0.030650] (((((38,37),36),35),(34,((33,(32,30)),((31,29),28)))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_8 [p = 0.030, P = 0.775] = [&W 0.030117] (((((38,37),36),35),(34,((33,(32,30)),((31,29),28)))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_9 [p = 0.022, P = 0.797] = [&W 0.022122] (((((38,37),36),35),((34,(33,(32,30))),((31,29),28))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_10 [p = 0.022, P = 0.818] = [&W 0.021588] (((((38,37),36),35),(((34,33),(32,30)),((31,29),28))),((((23,(24,(27,(25,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_11 [p = 0.019, P = 0.837] = [&W 0.018923] (((((38,37),36),35),(34,(33,((32,30),((31,29),28))))),((((23,(24,(27,(25,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_12 [p = 0.010, P = 0.847] = [&W 0.010128] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(48,(47,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_13 [p = 0.009, P = 0.856] = [&W 0.009062] (((((38,37),36),35),((34,(33,(32,30))),((31,29),28))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_14 [p = 0.009, P = 0.865] = [&W 0.008795] (((((38,37),36),35),(34,(33,((32,30),((31,29),28))))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(48,(47,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_15 [p = 0.009, P = 0.874] = [&W 0.008795] ((((38,37),(36,35)),((34,33),((32,30),((31,29),28)))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_16 [p = 0.009, P = 0.882] = [&W 0.008529] (((((38,37),36),35),(34,(33,((32,30),((31,29),28))))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((50,49),(47,(48,46))),(((14,13),12),11)),((((42,41),40),(((45,44),43),39)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_17 [p = 0.009, P = 0.891] = [&W 0.008529] (((((38,37),36),35),((34,33),(((32,30),(31,29)),28))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_18 [p = 0.007, P = 0.898] = [&W 0.006663] (((((38,37),36),35),(((34,33),(32,30)),((31,29),28))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((((50,49),(47,(48,46))),(((14,13),12),11)),((((42,41),40),(((45,44),43),39)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_19 [p = 0.007, P = 0.904] = [&W 0.006663] ((((38,37),(36,35)),((34,33),(((32,30),(31,29)),28))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_20 [p = 0.006, P = 0.910] = [&W 0.006130] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(48,(47,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_21 [p = 0.006, P = 0.916] = [&W 0.005597] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((((50,49),(47,(48,46))),(((14,13),12),11)),((((42,41),40),(((45,44),43),39)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_22 [p = 0.005, P = 0.921] = [&W 0.005064] (((((38,37),36),35),(34,((33,(32,30)),((31,29),28)))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((((50,49),(47,(48,46))),(((14,13),12),11)),((((42,41),40),(((45,44),43),39)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_23 [p = 0.005, P = 0.926] = [&W 0.004797] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((23,(24,(27,(25,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(47,(48,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_24 [p = 0.005, P = 0.930] = [&W 0.004531] (((((38,37),36),35),(34,((33,(32,30)),((31,29),28)))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((50,49),(47,(48,46))),(((14,13),12),11)),((((42,41),40),(((45,44),43),39)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_25 [p = 0.004, P = 0.934] = [&W 0.003998] (((((38,37),36),35),((34,(33,(32,30))),((31,29),28))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((((50,49),(47,(48,46))),(((14,13),12),11)),((((42,41),40),(((45,44),43),39)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_26 [p = 0.004, P = 0.938] = [&W 0.003998] (((((38,37),36),35),((34,33),(((32,30),(31,29)),28))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(48,(47,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_27 [p = 0.004, P = 0.942] = [&W 0.003731] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(47,(48,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_28 [p = 0.003, P = 0.946] = [&W 0.003465] ((((38,37),(36,35)),((34,33),((32,30),((31,29),28)))),((((23,(24,(27,(25,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(47,(48,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_29 [p = 0.003, P = 0.949] = [&W 0.003198] (((((38,37),36),35),(34,((33,(32,30)),((31,29),28)))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(48,(47,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_30 [p = 0.003, P = 0.952] = [&W 0.003198] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((50,49),(47,(48,46))),(((14,13),12),11)),((((42,41),40),(((45,44),43),39)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_31 [p = 0.003, P = 0.955] = [&W 0.002932] (((((38,37),36),35),(((34,33),(32,30)),((31,29),28))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(47,(48,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_32 [p = 0.003, P = 0.958] = [&W 0.002932] (((((38,37),36),35),(((34,33),(32,30)),((31,29),28))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(47,(48,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_33 [p = 0.003, P = 0.961] = [&W 0.002665] ((((38,37),(36,35)),((34,33),((32,30),((31,29),28)))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(47,(48,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_34 [p = 0.002, P = 0.963] = [&W 0.002399] (((((38,37),36),35),(34,((33,(32,30)),((31,29),28)))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(47,(48,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_35 [p = 0.002, P = 0.965] = [&W 0.002399] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((23,(24,(27,(25,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((50,49),(47,(48,46))),(((14,13),12),11)),((((42,41),40),(((45,44),43),39)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_36 [p = 0.002, P = 0.968] = [&W 0.002399] (((36,((38,37),35)),((34,(33,(32,30))),((31,29),28))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_37 [p = 0.002, P = 0.970] = [&W 0.002132] (((((38,37),36),35),(34,((33,(32,30)),((31,29),28)))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((50,49),(48,(47,46))),(((14,13),12),11)),((((42,41),40),(((45,44),43),39)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_38 [p = 0.002, P = 0.972] = [&W 0.002132] (((((38,37),36),35),(34,(33,((32,30),((31,29),28))))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((10,(9,8)),7),(((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),(1,(6,(5,(3,(4,2)))))))));
   tree tree_39 [p = 0.002, P = 0.974] = [&W 0.001866] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((((50,49),(48,(47,46))),(((14,13),12),11)),((((42,41),40),(((45,44),43),39)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_40 [p = 0.002, P = 0.976] = [&W 0.001866] ((((38,37),(36,35)),((34,33),(((32,30),(31,29)),28))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(48,(47,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_41 [p = 0.002, P = 0.978] = [&W 0.001866] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((24,(23,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(47,(48,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_42 [p = 0.002, P = 0.979] = [&W 0.001599] (((((38,37),36),35),((34,33),(((32,30),(31,29)),28))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(47,(48,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_43 [p = 0.002, P = 0.981] = [&W 0.001599] (((((38,37),36),35),((34,33),(((32,30),(31,29)),28))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(48,(47,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_44 [p = 0.001, P = 0.982] = [&W 0.001333] ((((38,37),(36,35)),((34,33),((32,30),((31,29),28)))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_45 [p = 0.001, P = 0.983] = [&W 0.001333] (((((38,37),36),35),(34,((33,(32,30)),((31,29),28)))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),(((10,(9,8)),7),(1,(6,(5,(3,(4,2)))))))));
   tree tree_46 [p = 0.001, P = 0.985] = [&W 0.001333] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((24,(23,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_47 [p = 0.001, P = 0.986] = [&W 0.001333] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((24,(23,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(48,(47,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_48 [p = 0.001, P = 0.987] = [&W 0.001333] (((((38,37),36),35),(34,(33,((32,30),((31,29),28))))),((((24,(23,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(48,(47,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_49 [p = 0.001, P = 0.989] = [&W 0.001333] (((36,((38,37),35)),((34,33),((32,30),((31,29),28)))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_50 [p = 0.001, P = 0.990] = [&W 0.001066] (((36,((38,37),35)),(((34,33),(32,30)),((31,29),28))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_51 [p = 0.001, P = 0.991] = [&W 0.001066] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(48,(47,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_52 [p = 0.001, P = 0.992] = [&W 0.001066] (((36,((38,37),35)),((34,(33,(32,30))),((31,29),28))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,((5,3),(4,2)))))));
   tree tree_53 [p = 0.001, P = 0.993] = [&W 0.001066] (((36,((38,37),35)),((34,33),(((32,30),(31,29)),28))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_54 [p = 0.001, P = 0.994] = [&W 0.000800] (((36,((38,37),35)),(34,(33,((32,30),((31,29),28))))),((((24,(23,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_55 [p = 0.001, P = 0.995] = [&W 0.000800] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((24,(23,(27,(25,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(47,(48,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_56 [p = 0.001, P = 0.995] = [&W 0.000800] (((((38,37),36),35),(34,(33,((32,30),((31,29),28))))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(47,(48,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_57 [p = 0.001, P = 0.996] = [&W 0.000800] (((((38,37),36),35),(34,(33,((32,30),((31,29),28))))),((((24,(23,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_58 [p = 0.001, P = 0.997] = [&W 0.000533] (((((38,37),36),35),((34,33),((32,30),((31,29),28)))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(47,(48,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_59 [p = 0.001, P = 0.997] = [&W 0.000533] (((36,((38,37),35)),(34,(33,((32,30),((31,29),28))))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_60 [p = 0.001, P = 0.998] = [&W 0.000533] (((((38,37),36),35),(34,((33,(32,30)),((31,29),28)))),((((24,(23,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_61 [p = 0.001, P = 0.998] = [&W 0.000533] (((((38,37),36),35),(34,(33,((32,30),((31,29),28))))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(47,(48,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_62 [p = 0.000, P = 0.999] = [&W 0.000267] (((((38,37),36),35),(34,(33,((32,30),((31,29),28))))),((((24,(23,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_63 [p = 0.000, P = 0.999] = [&W 0.000267] (((((38,37),36),35),(34,((33,(32,30)),((31,29),28)))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((10,(9,8)),7),(((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),(1,(6,(5,(3,(4,2)))))))));
   tree tree_64 [p = 0.000, P = 0.999] = [&W 0.000267] (((36,((38,37),35)),((34,33),((32,30),((31,29),28)))),((((23,(24,(27,(25,(26,(22,21)))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,(5,(3,(4,2))))))));
   tree tree_65 [p = 0.000, P = 0.999] = [&W 0.000267] (((36,((38,37),35)),(((34,33),(32,30)),((31,29),28))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),(((((50,49),(47,(48,46))),(((14,13),12),11)),((((42,41),40),(((45,44),43),39)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_66 [p = 0.000, P = 1.000] = [&W 0.000267] ((((38,37),(36,35)),((34,33),(((32,30),(31,29)),28))),((((23,(24,(25,(27,(26,(22,21)))))),(20,((19,18),(17,16)))),15),(((((42,41),40),(((45,44),43),39)),((((50,49),(48,(47,46))),(((14,13),12),11)),((10,(9,8)),7))),(1,(6,(5,(3,(4,2))))))));
   tree tree_67 [p = 0.000, P = 1.000] = [&W 0.000267] (((((38,37),36),35),((34,(33,(32,30))),((31,29),28))),((((23,(24,((27,25),(26,(22,21))))),(20,((19,18),(17,16)))),15),((((((42,41),40),(((45,44),43),39)),(((50,49),(47,(48,46))),(((14,13),12),11))),((10,(9,8)),7)),(1,(6,((5,3),(4,2)))))));
end;
