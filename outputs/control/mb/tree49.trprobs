#NEXUS

[ID: 1696084706]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 50,
    2 49,
    3 47,
    4 45,
    5 28,
    6 29,
    7 15,
    8 34,
    9 16,
   10 1,
   11 2,
   12 39,
   13 6,
   14 24,
   15 12,
   16 21,
   17 5,
   18 20,
   19 11,
   20 25,
   21 27,
   22 17,
   23 19,
   24 35,
   25 18,
   26 33,
   27 36,
   28 32,
   29 46,
   30 7,
   31 8,
   32 22,
   33 3,
   34 4,
   35 41,
   36 40,
   37 30,
   38 31,
   39 48,
   40 37,
   41 38,
   42 42,
   43 43,
   44 44,
   45 23,
   46 13,
   47 14,
   48 26,
   49 9,
   50 10;
   tree tree_1 [p = 0.373, P = 0.373] = [&W 0.372601] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),((((19,15),((21,14),(20,((18,16),(17,13))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_2 [p = 0.258, P = 0.631] = [&W 0.258262] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),((21,14),(20,((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_3 [p = 0.060, P = 0.691] = [&W 0.059968] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),((21,14),(20,((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_4 [p = 0.055, P = 0.746] = [&W 0.054904] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),((((19,15),((21,14),(20,((18,16),(17,13))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_5 [p = 0.025, P = 0.771] = [&W 0.025053] (((((((((50,49),48),((47,46),45)),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),((21,14),(20,((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_6 [p = 0.021, P = 0.792] = [&W 0.020789] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),((((21,14),((19,15),(20,((18,16),(17,13))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_7 [p = 0.021, P = 0.812] = [&W 0.020789] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((21,14),((19,15),(20,((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_8 [p = 0.016, P = 0.828] = [&W 0.015991] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),((((19,15),((20,(21,14)),((18,16),(17,13)))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_9 [p = 0.016, P = 0.844] = [&W 0.015725] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((19,15),(21,14)),(20,((18,16),(17,13)))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_10 [p = 0.013, P = 0.857] = [&W 0.012527] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((20,(19,15)),((21,14),((18,16),(17,13)))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_11 [p = 0.012, P = 0.869] = [&W 0.012260] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((21,14),((19,15),(20,((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_12 [p = 0.011, P = 0.880] = [&W 0.010928] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),((((21,14),((20,(19,15)),((18,16),(17,13)))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_13 [p = 0.010, P = 0.890] = [&W 0.010394] (((((((((50,49),48),((47,46),45)),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),((((19,15),((21,14),(20,((18,16),(17,13))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_14 [p = 0.009, P = 0.900] = [&W 0.009328] (((39,((((((50,49),48),((47,46),45)),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),((20,(21,14)),((18,16),(17,13)))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_15 [p = 0.007, P = 0.907] = [&W 0.007196] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),((20,(21,14)),((18,16),(17,13)))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_16 [p = 0.006, P = 0.913] = [&W 0.006397] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((((19,15),(21,14)),(20,((18,16),(17,13)))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_17 [p = 0.006, P = 0.919] = [&W 0.006130] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((((19,15),((21,14),(20,((18,16),(17,13))))),12),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_18 [p = 0.006, P = 0.925] = [&W 0.005597] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),((((21,14),((19,15),(20,((18,16),(17,13))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_19 [p = 0.005, P = 0.930] = [&W 0.005330] (((((((((50,49),48),((47,46),45)),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),((((19,15),((20,(21,14)),((18,16),(17,13)))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_20 [p = 0.005, P = 0.935] = [&W 0.005064] (((((((((50,49),48),((47,46),45)),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),((20,(21,14)),((18,16),(17,13)))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_21 [p = 0.005, P = 0.940] = [&W 0.005064] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),((((19,15),((20,(21,14)),((18,16),(17,13)))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_22 [p = 0.005, P = 0.945] = [&W 0.004797] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),(20,((21,14),((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_23 [p = 0.004, P = 0.949] = [&W 0.003998] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((21,14),((20,(19,15)),((18,16),(17,13)))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_24 [p = 0.004, P = 0.953] = [&W 0.003731] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((21,14),((19,15),(20,(16,(18,(17,13)))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_25 [p = 0.003, P = 0.956] = [&W 0.003465] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),((((19,15),((21,14),(20,(16,(18,(17,13)))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_26 [p = 0.003, P = 0.959] = [&W 0.003198] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((((19,15),(21,14)),(20,((18,16),(17,13)))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_27 [p = 0.003, P = 0.963] = [&W 0.003198] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),((((38,37),36),35),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),((21,14),(20,((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_28 [p = 0.003, P = 0.966] = [&W 0.003198] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),((((21,14),((19,15),(20,(16,(18,(17,13)))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_29 [p = 0.003, P = 0.969] = [&W 0.002932] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),((((38,37),36),35),(34,33))),((((19,15),((20,(21,14)),((18,16),(17,13)))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_30 [p = 0.002, P = 0.971] = [&W 0.002399] (((39,((((((50,49),48),(46,(47,45))),(43,(44,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),((21,14),(20,((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_31 [p = 0.002, P = 0.974] = [&W 0.002399] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((((19,15),((21,14),(20,((18,16),(17,13))))),12),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_32 [p = 0.002, P = 0.976] = [&W 0.002132] (((39,((((((50,49),48),(46,(47,45))),(43,(44,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((((19,15),(21,14)),(20,((18,16),(17,13)))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_33 [p = 0.002, P = 0.978] = [&W 0.001866] (((39,((((((50,49),48),((47,46),45)),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((21,14),((19,15),(20,((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_34 [p = 0.002, P = 0.979] = [&W 0.001866] (((39,((((((50,49),48),((47,46),45)),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),((21,14),(20,((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_35 [p = 0.002, P = 0.981] = [&W 0.001866] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),((20,(21,14)),((18,16),(17,13)))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_36 [p = 0.002, P = 0.983] = [&W 0.001599] (((((((((50,49),48),((47,46),45)),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((21,14),((19,15),(20,((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_37 [p = 0.001, P = 0.984] = [&W 0.001333] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((19,15),(21,14)),(20,((18,16),(17,13)))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_38 [p = 0.001, P = 0.986] = [&W 0.001333] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((20,(19,15)),((21,14),((18,16),(17,13)))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_39 [p = 0.001, P = 0.987] = [&W 0.001333] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),((((38,37),36),35),(34,33)))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),((21,14),(20,((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_40 [p = 0.001, P = 0.988] = [&W 0.001333] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((19,15),(21,14)),(20,((18,16),(17,13)))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(8,((11,10),(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_41 [p = 0.001, P = 0.990] = [&W 0.001333] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),((21,14),(20,((18,16),(17,13))))),12)),(8,((11,10),(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_42 [p = 0.001, P = 0.991] = [&W 0.001066] (((39,((((((50,49),48),((47,46),45)),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),((((21,14),((19,15),(20,((18,16),(17,13))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_43 [p = 0.001, P = 0.992] = [&W 0.001066] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),((((19,15),((21,14),(20,(16,(18,(17,13)))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_44 [p = 0.001, P = 0.993] = [&W 0.001066] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),(20,((21,14),((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_45 [p = 0.001, P = 0.994] = [&W 0.000800] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),((((19,15),((21,14),(20,((18,16),(17,13))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((11,10),8),(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_46 [p = 0.001, P = 0.994] = [&W 0.000800] (((39,((((((50,49),48),((47,46),45)),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),((((19,15),((21,14),(20,((18,16),(17,13))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_47 [p = 0.001, P = 0.995] = [&W 0.000533] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),((((21,14),((19,15),(20,(16,(18,(17,13)))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_48 [p = 0.001, P = 0.995] = [&W 0.000533] ((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(39,(((38,37),(36,35)),(34,33)))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((19,15),((21,14),(20,((18,16),(17,13))))),12)),((11,10),(8,(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_49 [p = 0.001, P = 0.996] = [&W 0.000533] (((((((((50,49),48),((47,46),45)),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),((((21,14),((19,15),(20,((18,16),(17,13))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_50 [p = 0.001, P = 0.997] = [&W 0.000533] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),((((21,14),((20,(19,15)),((18,16),(17,13)))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_51 [p = 0.001, P = 0.997] = [&W 0.000533] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),((((19,15),((20,(21,14)),((18,16),(17,13)))),12),(((((32,31),30),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_52 [p = 0.001, P = 0.998] = [&W 0.000533] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((19,15),(21,14)),(20,(16,(18,(17,13))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_53 [p = 0.001, P = 0.998] = [&W 0.000533] (((39,((((((50,49),48),(46,(47,45))),(43,(44,42))),(41,40)),(((38,37),(36,35)),(34,33)))),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((((19,15),((21,14),(20,((18,16),(17,13))))),12),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_54 [p = 0.000, P = 0.998] = [&W 0.000267] (((39,((((((50,49),48),((47,46),45)),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),(((((19,15),(21,14)),(20,((18,16),(17,13)))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_55 [p = 0.000, P = 0.999] = [&W 0.000267] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),((((19,15),((21,14),(20,((18,16),(17,13))))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(8,((11,10),(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_56 [p = 0.000, P = 0.999] = [&W 0.000267] (((39,((((((50,49),48),(46,(47,45))),(43,(44,42))),(41,40)),(((38,37),(36,35)),(34,33)))),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(((((19,15),(21,14)),(20,((18,16),(17,13)))),12),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_57 [p = 0.000, P = 0.999] = [&W 0.000267] (((((((((50,49),48),((47,46),45)),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((19,15),(21,14)),(20,((18,16),(17,13)))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_58 [p = 0.000, P = 0.999] = [&W 0.000267] (((39,((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),(((38,37),(36,35)),(34,33)))),((((20,(19,15)),((21,14),((18,16),(17,13)))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((11,10),(8,(9,7)))))),(1,((((6,5),4),3),2)));
   tree tree_59 [p = 0.000, P = 1.000] = [&W 0.000267] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),((((19,15),(21,14)),(20,((18,16),(17,13)))),12)),(8,((11,10),(9,7))))),(1,((((6,5),4),3),2)));
   tree tree_60 [p = 0.000, P = 1.000] = [&W 0.000267] (((((((((50,49),48),(46,(47,45))),(44,(43,42))),(41,40)),39),(((38,37),(36,35)),(34,33))),(((((19,15),(21,14)),(20,((18,16),(17,13)))),12),((((32,(31,30)),28),(29,((27,24),(26,(25,(23,22)))))),(8,((11,10),(9,7)))))),(1,((((6,5),4),3),2)));
end;
