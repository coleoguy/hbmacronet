#NEXUS

[ID: 0240032128]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 37,
    2 5,
    3 6,
    4 9,
    5 29,
    6 30,
    7 47,
    8 48,
    9 49,
   10 50,
   11 40,
   12 1,
   13 2,
   14 35,
   15 39,
   16 36,
   17 38,
   18 41,
   19 42,
   20 46,
   21 10,
   22 11,
   23 32,
   24 33,
   25 14,
   26 12,
   27 13,
   28 15,
   29 26,
   30 7,
   31 8,
   32 3,
   33 4,
   34 17,
   35 25,
   36 20,
   37 24,
   38 31,
   39 16,
   40 21,
   41 27,
   42 34,
   43 28,
   44 43,
   45 22,
   46 23,
   47 18,
   48 19,
   49 44,
   50 45;
   tree tree_1 [p = 0.519, P = 0.519] = [&W 0.518923] (((((50,49),(44,(((48,47),(43,42)),((46,45),41)))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30))),(((27,26),(29,(28,25))),(24,23))),((((22,21),20),(19,18)),(((17,15),(16,14)),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2))))))));
   tree tree_2 [p = 0.194, P = 0.713] = [&W 0.194030] (((((50,49),(44,(((48,47),(43,42)),((46,45),41)))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30))),(((27,26),(29,(28,25))),(24,23))),(((((22,21),20),(19,18)),((17,15),(16,14))),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))));
   tree tree_3 [p = 0.098, P = 0.811] = [&W 0.098081] ((((50,49),((44,(((48,47),(43,42)),((46,45),41))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30)))),(((27,26),(29,(28,25))),(24,23))),((((22,21),20),(19,18)),(((17,15),(16,14)),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2))))))));
   tree tree_4 [p = 0.048, P = 0.859] = [&W 0.047974] ((((27,26),(29,(28,25))),(24,23)),((((50,49),(44,(((48,47),(43,42)),((46,45),41)))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30))),((((22,21),20),(19,18)),(((17,15),(16,14)),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))))));
   tree tree_5 [p = 0.046, P = 0.905] = [&W 0.046375] ((((27,26),(29,(28,25))),(24,23)),(((50,49),((44,(((48,47),(43,42)),((46,45),41))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30)))),((((22,21),20),(19,18)),(((17,15),(16,14)),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))))));
   tree tree_6 [p = 0.019, P = 0.924] = [&W 0.018923] (((((50,49),(44,(((48,47),(43,42)),((46,45),41)))),(((36,((40,37),35)),((39,34),(38,(33,32)))),(31,30))),(((27,26),(29,(28,25))),(24,23))),((((22,21),20),(19,18)),(((17,15),(16,14)),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2))))))));
   tree tree_7 [p = 0.012, P = 0.936] = [&W 0.011994] ((((50,49),((44,(((48,47),(43,42)),((46,45),41))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30)))),(((27,26),(29,(28,25))),(24,23))),(((((22,21),20),(19,18)),((17,15),(16,14))),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))));
   tree tree_8 [p = 0.012, P = 0.948] = [&W 0.011994] (((((50,49),(44,(((48,47),(43,42)),((46,45),41)))),((((40,37),36),35),(((39,34),(38,(33,32))),(31,30)))),(((27,26),(29,(28,25))),(24,23))),(((((22,21),20),(19,18)),((17,15),(16,14))),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))));
   tree tree_9 [p = 0.010, P = 0.958] = [&W 0.010128] ((((50,49),((44,(((48,47),(43,42)),((46,45),41))),((((40,37),36),35),(((39,34),(38,(33,32))),(31,30))))),(((27,26),(29,(28,25))),(24,23))),(((((22,21),20),(19,18)),((17,15),(16,14))),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))));
   tree tree_10 [p = 0.009, P = 0.968] = [&W 0.009328] (((((50,49),(44,(((48,47),(43,42)),((46,45),41)))),(((36,((40,37),35)),((39,34),(38,(33,32)))),(31,30))),(((27,26),(29,(28,25))),(24,23))),(((((22,21),20),(19,18)),((17,15),(16,14))),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))));
   tree tree_11 [p = 0.006, P = 0.974] = [&W 0.006397] ((((50,49),((44,((43,((48,47),42)),((46,45),41))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30)))),(((27,26),(29,(28,25))),(24,23))),(((((22,21),20),(19,18)),((17,15),(16,14))),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))));
   tree tree_12 [p = 0.006, P = 0.980] = [&W 0.005597] (((50,49),((44,(((48,47),(43,42)),((46,45),41))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30)))),((((27,26),(29,(28,25))),(24,23)),((((22,21),20),(19,18)),(((17,15),(16,14)),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))))));
   tree tree_13 [p = 0.004, P = 0.984] = [&W 0.004264] (((((50,49),(44,(((48,47),(43,42)),((46,45),41)))),((36,((40,37),35)),(((39,34),(38,(33,32))),(31,30)))),(((27,26),(29,(28,25))),(24,23))),(((((22,21),20),(19,18)),((17,15),(16,14))),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))));
   tree tree_14 [p = 0.004, P = 0.988] = [&W 0.003998] (((((50,49),(44,(((48,47),(43,42)),((46,45),41)))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30))),((27,26),((29,(28,25)),(24,23)))),(((((22,21),20),(19,18)),((17,15),(16,14))),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))));
   tree tree_15 [p = 0.003, P = 0.991] = [&W 0.002932] (((((50,49),(44,(((48,47),(43,42)),((46,45),41)))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30))),((29,(28,25)),((27,26),(24,23)))),(((((22,21),20),(19,18)),((17,15),(16,14))),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))));
   tree tree_16 [p = 0.002, P = 0.993] = [&W 0.002132] (((((50,49),(44,((43,((48,47),42)),((46,45),41)))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30))),(((27,26),(29,(28,25))),(24,23))),((((22,21),20),(19,18)),(((17,15),(16,14)),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2))))))));
   tree tree_17 [p = 0.002, P = 0.995] = [&W 0.001599] (((((50,49),(44,(((48,47),(43,42)),((46,45),41)))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30))),((29,(28,25)),((27,26),(24,23)))),((((22,21),20),(19,18)),(((17,15),(16,14)),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2))))))));
   tree tree_18 [p = 0.001, P = 0.996] = [&W 0.001333] (((((50,49),(44,(((48,47),(43,42)),((46,45),41)))),((((40,37),36),35),(((39,34),(38,(33,32))),(31,30)))),(((27,26),(29,(28,25))),(24,23))),((((22,21),20),(19,18)),(((17,15),(16,14)),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2))))))));
   tree tree_19 [p = 0.001, P = 0.997] = [&W 0.001333] ((((50,49),((44,((43,((48,47),42)),((46,45),41))),(((36,((40,37),35)),((39,34),(38,(33,32)))),(31,30)))),(((27,26),(29,(28,25))),(24,23))),(((((22,21),20),(19,18)),((17,15),(16,14))),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))));
   tree tree_20 [p = 0.001, P = 0.998] = [&W 0.001066] ((((50,49),((44,(((48,47),(43,42)),((46,45),41))),(((36,((40,37),35)),((39,34),(38,(33,32)))),(31,30)))),(((27,26),(29,(28,25))),(24,23))),((((22,21),20),(19,18)),(((17,15),(16,14)),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2))))))));
   tree tree_21 [p = 0.001, P = 0.999] = [&W 0.000533] ((((50,49),((44,(((48,47),(43,42)),((46,45),41))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30)))),((29,(28,25)),((27,26),(24,23)))),((((22,21),20),(19,18)),(((17,15),(16,14)),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2))))))));
   tree tree_22 [p = 0.001, P = 0.999] = [&W 0.000533] (((((50,49),(44,((43,((48,47),42)),((46,45),41)))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30))),(((27,26),(29,(28,25))),(24,23))),(((((22,21),20),(19,18)),((17,15),(16,14))),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))));
   tree tree_23 [p = 0.000, P = 1.000] = [&W 0.000267] (((((50,49),(44,(((48,47),(43,42)),((46,45),41)))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30))),(((27,26),(29,(28,25))),(24,23))),(((17,15),(16,14)),((((22,21),20),(19,18)),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2))))))));
   tree tree_24 [p = 0.000, P = 1.000] = [&W 0.000267] ((((50,49),(44,(((48,47),(43,42)),((46,45),41)))),(((((40,37),36),35),((39,34),(38,(33,32)))),(31,30))),((((27,26),(29,(28,25))),(24,23)),((((22,21),20),(19,18)),(((17,15),(16,14)),(((((13,12),11),(10,9)),(6,5)),((8,7),(1,(3,(4,2)))))))));
end;
