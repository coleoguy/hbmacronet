#NEXUS

[ID: 0016089484]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 50,
    2 17,
    3 18,
    4 25,
    5 43,
    6 46,
    7 48,
    8 44,
    9 41,
   10 42,
   11 19,
   12 33,
   13 1,
   14 2,
   15 5,
   16 6,
   17 37,
   18 31,
   19 32,
   20 20,
   21 30,
   22 39,
   23 21,
   24 22,
   25 40,
   26 47,
   27 26,
   28 27,
   29 38,
   30 15,
   31 16,
   32 28,
   33 29,
   34 8,
   35 14,
   36 13,
   37 7,
   38 34,
   39 23,
   40 24,
   41 35,
   42 36,
   43 3,
   44 4,
   45 49,
   46 9,
   47 11,
   48 45,
   49 10,
   50 12;
   tree tree_1 [p = 0.608, P = 0.608] = [&W 0.607942] (((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((38,((36,35),(37,34))),((33,32),((31,30),29))),((18,(19,17)),((26,((25,22),(23,((24,21),20)))),((28,27),(16,15)))))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2))))))));
   tree tree_2 [p = 0.091, P = 0.699] = [&W 0.090618] (((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((33,32),((38,((36,35),(37,34))),((31,30),29))),((18,(19,17)),((26,((25,22),(23,((24,21),20)))),((28,27),(16,15)))))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2))))))));
   tree tree_3 [p = 0.082, P = 0.781] = [&W 0.082090] ((42,41),(((48,((50,47),((49,46),(44,43)))),(45,(40,39))),((((38,((36,35),(37,34))),((33,32),((31,30),29))),((18,(19,17)),((26,((25,22),(23,((24,21),20)))),((28,27),(16,15))))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2))))))))));
   tree tree_4 [p = 0.061, P = 0.842] = [&W 0.061034] (((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((38,((36,35),(37,34))),((33,32),((31,30),29))),((18,(19,17)),((26,((25,22),((24,23),(21,20)))),((28,27),(16,15)))))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2))))))));
   tree tree_5 [p = 0.036, P = 0.877] = [&W 0.035714] (((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((38,((36,35),(37,34))),((33,32),((31,30),29))),((18,(19,17)),((26,((25,22),(21,((24,23),20)))),((28,27),(16,15)))))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2))))))));
   tree tree_6 [p = 0.027, P = 0.904] = [&W 0.026652] (1,((((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((33,32),((38,((36,35),(37,34))),((31,30),29))),((18,(19,17)),((26,((25,22),(23,((24,21),20)))),((28,27),(16,15)))))),((12,((14,13),11)),((10,9),8))),(7,(6,(5,(4,(3,2)))))));
   tree tree_7 [p = 0.014, P = 0.918] = [&W 0.013593] ((((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((38,((36,35),(37,34))),((33,32),((31,30),29))),((18,(19,17)),((26,((25,22),(23,((24,21),20)))),((28,27),(16,15)))))),((12,((14,13),11)),((10,9),8))),(1,(7,(6,(5,(4,(3,2)))))));
   tree tree_8 [p = 0.013, P = 0.931] = [&W 0.013060] (1,((((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((38,((36,35),(37,34))),((33,32),((31,30),29))),((18,(19,17)),((26,((25,22),(23,((24,21),20)))),((28,27),(16,15)))))),((12,((14,13),11)),((10,9),8))),(7,(6,(5,(4,(3,2)))))));
   tree tree_9 [p = 0.013, P = 0.943] = [&W 0.012793] ((18,(19,17)),((((38,((36,35),(37,34))),((33,32),((31,30),29))),((26,((25,22),(23,((24,21),20)))),((28,27),(16,15)))),((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2))))))))));
   tree tree_10 [p = 0.012, P = 0.955] = [&W 0.011727] ((((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((33,32),((38,((36,35),(37,34))),((31,30),29))),((18,(19,17)),((26,((25,22),(23,((24,21),20)))),((28,27),(16,15)))))),((12,((14,13),11)),((10,9),8))),(1,(7,(6,(5,(4,(3,2)))))));
   tree tree_11 [p = 0.010, P = 0.966] = [&W 0.010394] (((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((33,32),((38,((36,35),(37,34))),((31,30),29))),((18,(19,17)),((26,((25,22),(21,((24,23),20)))),((28,27),(16,15)))))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2))))))));
   tree tree_12 [p = 0.005, P = 0.971] = [&W 0.005330] (((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((38,((36,35),(37,34))),((33,32),((31,30),29))),((18,(19,17)),((26,(25,(22,((24,23),(21,20))))),((28,27),(16,15)))))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2))))))));
   tree tree_13 [p = 0.005, P = 0.976] = [&W 0.005330] (((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((33,32),((38,((36,35),(37,34))),((31,30),29))),((18,(19,17)),((26,((25,22),((24,23),(21,20)))),((28,27),(16,15)))))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2))))))));
   tree tree_14 [p = 0.005, P = 0.981] = [&W 0.005064] (((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((38,((36,35),(37,34))),((33,32),((31,30),29))),((18,(19,17)),((26,(25,(22,(23,((24,21),20))))),((28,27),(16,15)))))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2))))))));
   tree tree_15 [p = 0.005, P = 0.986] = [&W 0.005064] (((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((33,32),((38,((36,35),(37,34))),((31,30),29))),((18,(19,17)),((26,((25,22),(23,((24,21),20)))),((28,27),(16,15)))))),(((12,((14,13),11)),(10,(9,8))),(1,(7,(6,(5,(4,(3,2))))))));
   tree tree_16 [p = 0.003, P = 0.989] = [&W 0.002665] (((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((33,32),((38,((36,35),(37,34))),((31,30),29))),((18,(19,17)),((26,((25,22),(((24,23),21),20))),((28,27),(16,15)))))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2))))))));
   tree tree_17 [p = 0.003, P = 0.992] = [&W 0.002665] (((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((38,((36,35),(37,34))),((33,32),((31,30),29))),((18,(19,17)),((26,((25,22),(23,(24,(21,20))))),((28,27),(16,15)))))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2))))))));
   tree tree_18 [p = 0.002, P = 0.994] = [&W 0.002399] ((((38,((36,35),(37,34))),((33,32),((31,30),29))),((18,(19,17)),((26,((25,22),(23,((24,21),20)))),((28,27),(16,15))))),((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2)))))))));
   tree tree_19 [p = 0.002, P = 0.996] = [&W 0.002132] (((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((38,((36,35),(37,34))),((33,32),((31,30),29))),((18,(19,17)),((26,((25,22),(23,((24,21),20)))),((28,27),(16,15)))))),(((12,((14,13),11)),(10,(9,8))),(1,(7,(6,(5,(4,(3,2))))))));
   tree tree_20 [p = 0.002, P = 0.998] = [&W 0.002132] ((18,(19,17)),(((26,((25,22),(23,((24,21),20)))),((28,27),(16,15))),(((38,((36,35),(37,34))),((33,32),((31,30),29))),((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2)))))))))));
   tree tree_21 [p = 0.001, P = 1.000] = [&W 0.001333] (((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((33,32),((38,((36,35),(37,34))),((31,30),29))),((18,(19,17)),((26,(25,(22,(23,((24,21),20))))),((28,27),(16,15)))))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2))))))));
   tree tree_22 [p = 0.000, P = 1.000] = [&W 0.000267] (((18,(19,17)),(((38,((36,35),(37,34))),((33,32),((31,30),29))),((26,((25,22),(23,((24,21),20)))),((28,27),(16,15))))),((((48,((50,47),((49,46),(44,43)))),(42,41)),(45,(40,39))),(((12,((14,13),11)),((10,9),8)),(1,(7,(6,(5,(4,(3,2)))))))));
end;
