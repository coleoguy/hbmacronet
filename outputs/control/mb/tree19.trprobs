#NEXUS

[ID: 0689174509]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 19,
    2 20,
    3 49,
    4 45,
    5 44,
    6 14,
    7 15,
    8 3,
    9 4,
   10 48,
   11 8,
   12 37,
   13 7,
   14 23,
   15 24,
   16 25,
   17 31,
   18 38,
   19 39,
   20 43,
   21 46,
   22 10,
   23 9,
   24 26,
   25 11,
   26 12,
   27 18,
   28 29,
   29 35,
   30 41,
   31 36,
   32 40,
   33 1,
   34 2,
   35 42,
   36 27,
   37 21,
   38 22,
   39 30,
   40 16,
   41 17,
   42 34,
   43 5,
   44 13,
   45 6,
   46 28,
   47 32,
   48 33,
   49 47,
   50 50;
   tree tree_1 [p = 0.477, P = 0.477] = [&W 0.476546] ((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((16,(17,(15,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_2 [p = 0.189, P = 0.665] = [&W 0.188699] ((9,8),((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((16,(17,(15,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((((7,6),(5,4)),3),(1,2))));
   tree tree_3 [p = 0.178, P = 0.843] = [&W 0.177505] ((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((17,(15,(16,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_4 [p = 0.053, P = 0.895] = [&W 0.052505] (((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((16,(17,(15,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),(9,8)),((((7,6),(5,4)),3),(1,2)));
   tree tree_5 [p = 0.026, P = 0.921] = [&W 0.025586] ((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((20,(19,18)),((17,(15,(16,14))),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_6 [p = 0.026, P = 0.946] = [&W 0.025586] ((((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((16,(17,(15,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),(9,8)),(((7,6),(5,4)),3)),(1,2));
   tree tree_7 [p = 0.014, P = 0.960] = [&W 0.013593] (31,((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,29),21))),((16,(17,(15,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),((((7,6),(5,4)),3),(1,2)))));
   tree tree_8 [p = 0.009, P = 0.969] = [&W 0.008795] ((9,8),((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((17,(15,(16,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((((7,6),(5,4)),3),(1,2))));
   tree tree_9 [p = 0.009, P = 0.978] = [&W 0.008795] ((((50,(((((41,40),39),((34,33),32)),(((38,(37,36)),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((17,(15,(16,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_10 [p = 0.007, P = 0.984] = [&W 0.006663] (((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),(((17,(15,(16,14))),((20,(19,18)),(12,(13,11)))),((48,((47,(46,(44,(45,43)))),42)),(49,10)))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_11 [p = 0.003, P = 0.988] = [&W 0.003465] ((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((17,(15,(16,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),(((5,((7,6),4)),3),(1,2))));
   tree tree_12 [p = 0.002, P = 0.990] = [&W 0.001866] ((((50,(((((41,40),39),((34,33),32)),(((38,(37,36)),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((16,(17,(15,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_13 [p = 0.002, P = 0.991] = [&W 0.001599] ((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((20,(19,18)),((16,(17,(15,14))),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_14 [p = 0.002, P = 0.993] = [&W 0.001599] ((((50,(31,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,29),21)))),((16,(17,(15,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_15 [p = 0.001, P = 0.994] = [&W 0.001333] (((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),(((16,(17,(15,14))),((20,(19,18)),(12,(13,11)))),((48,((47,(46,(44,(45,43)))),42)),(49,10)))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_16 [p = 0.001, P = 0.995] = [&W 0.001333] ((((31,(50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,29),21)))),((16,(17,(15,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_17 [p = 0.001, P = 0.996] = [&W 0.000800] ((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((20,(19,18)),((17,(16,(15,14))),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_18 [p = 0.001, P = 0.997] = [&W 0.000800] ((9,8),((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((20,(19,18)),((16,(17,(15,14))),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((((7,6),(5,4)),3),(1,2))));
   tree tree_19 [p = 0.001, P = 0.998] = [&W 0.000800] ((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((31,(30,29)),21))),((16,(17,(15,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_20 [p = 0.001, P = 0.999] = [&W 0.000800] ((9,8),((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((20,(19,18)),((17,(15,(16,14))),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((((7,6),(5,4)),3),(1,2))));
   tree tree_21 [p = 0.000, P = 0.999] = [&W 0.000267] ((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((17,(15,(16,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),(((((7,6),5),4),3),(1,2))));
   tree tree_22 [p = 0.000, P = 0.999] = [&W 0.000267] ((31,(((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,29),21))),((16,(17,(15,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10)))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_23 [p = 0.000, P = 0.999] = [&W 0.000267] ((9,8),((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((17,(16,(15,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((((7,6),(5,4)),3),(1,2))));
   tree tree_24 [p = 0.000, P = 1.000] = [&W 0.000267] ((((50,(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),((30,(31,29)),21))),((20,(19,18)),(((17,15),(16,14)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),((((7,6),(5,4)),3),(1,2))));
   tree tree_25 [p = 0.000, P = 1.000] = [&W 0.000267] ((((50,((31,(30,29)),(((((41,40),39),((34,33),32)),((((38,37),36),35),((28,((27,26),25)),(24,(23,22))))),21))),((16,(17,(15,14))),((20,(19,18)),(12,(13,11))))),((48,((47,(46,(44,(45,43)))),42)),(49,10))),((9,8),((((7,6),(5,4)),3),(1,2))));
end;
