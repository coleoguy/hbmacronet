#NEXUS

[ID: 0505946388]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 50,
    2 43,
    3 18,
    4 46,
    5 39,
    6 17,
    7 44,
    8 21,
    9 22,
   10 42,
   11 29,
   12 27,
   13 11,
   14 12,
   15 19,
   16 20,
   17 47,
   18 9,
   19 10,
   20 48,
   21 40,
   22 23,
   23 24,
   24 28,
   25 37,
   26 41,
   27 7,
   28 8,
   29 5,
   30 6,
   31 1,
   32 2,
   33 45,
   34 30,
   35 31,
   36 13,
   37 14,
   38 34,
   39 33,
   40 35,
   41 32,
   42 49,
   43 15,
   44 16,
   45 36,
   46 3,
   47 4,
   48 26,
   49 25,
   50 38;
   tree tree_1 [p = 0.261, P = 0.261] = [&W 0.260661] (((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),((37,36),(1,(((((14,13),12),11),((7,(((9,8),5),4)),(6,3))),(10,2)))));
   tree tree_2 [p = 0.251, P = 0.511] = [&W 0.250533] (((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),((37,36),(1,(((((14,13),12),11),((7,(((9,8),5),4)),(6,3))),(10,2)))));
   tree tree_3 [p = 0.107, P = 0.618] = [&W 0.107143] ((37,36),(((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),(1,(((((14,13),12),11),((7,(((9,8),5),4)),(6,3))),(10,2)))));
   tree tree_4 [p = 0.078, P = 0.696] = [&W 0.078092] ((37,36),(((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),(1,(((((14,13),12),11),((7,(((9,8),5),4)),(6,3))),(10,2)))));
   tree tree_5 [p = 0.050, P = 0.746] = [&W 0.049840] (((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),((37,36),(1,(((((14,13),12),11),((((9,8),5),4),(7,(6,3)))),(10,2)))));
   tree tree_6 [p = 0.046, P = 0.792] = [&W 0.045576] (((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),((37,36),(1,(((((14,13),12),11),((((9,8),5),4),(7,(6,3)))),(10,2)))));
   tree tree_7 [p = 0.036, P = 0.828] = [&W 0.035981] ((37,36),(((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),(1,(((((14,13),12),11),((((9,8),5),4),(7,(6,3)))),(10,2)))));
   tree tree_8 [p = 0.030, P = 0.857] = [&W 0.029584] (((37,36),((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15)))))),(1,(((((14,13),12),11),((7,(((9,8),5),4)),(6,3))),(10,2))));
   tree tree_9 [p = 0.019, P = 0.877] = [&W 0.019456] ((37,36),(((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),(1,((((14,13),12),11),((7,((9,8),5)),((4,(6,3)),(10,2)))))));
   tree tree_10 [p = 0.019, P = 0.896] = [&W 0.019190] ((37,36),(((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),(1,((((14,13),12),11),((7,((9,8),5)),((4,(6,3)),(10,2)))))));
   tree tree_11 [p = 0.015, P = 0.911] = [&W 0.015192] ((37,36),(((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),(1,(((((14,13),12),11),((((9,8),5),4),(7,(6,3)))),(10,2)))));
   tree tree_12 [p = 0.015, P = 0.926] = [&W 0.014659] (1,(((37,36),((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15)))))),(((((14,13),12),11),((7,(((9,8),5),4)),(6,3))),(10,2))));
   tree tree_13 [p = 0.013, P = 0.939] = [&W 0.012793] (((37,36),((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15)))))),(1,(((((14,13),12),11),((7,(((9,8),5),4)),(6,3))),(10,2))));
   tree tree_14 [p = 0.012, P = 0.951] = [&W 0.012260] (((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),((37,36),(1,(((((14,13),12),11),(7,((((9,8),5),4),(6,3)))),(10,2)))));
   tree tree_15 [p = 0.011, P = 0.962] = [&W 0.010661] (((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),((((((24,23),(25,22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),((37,36),(1,(((((14,13),12),11),((7,(((9,8),5),4)),(6,3))),(10,2)))));
   tree tree_16 [p = 0.009, P = 0.971] = [&W 0.009062] (((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),((37,36),(1,(((((14,13),12),11),(7,((((9,8),5),4),(6,3)))),(10,2)))));
   tree tree_17 [p = 0.007, P = 0.978] = [&W 0.007196] (1,(((37,36),((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15)))))),(((((14,13),12),11),((7,(((9,8),5),4)),(6,3))),(10,2))));
   tree tree_18 [p = 0.004, P = 0.982] = [&W 0.004264] ((37,36),(((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),((((((24,23),(25,22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),(1,(((((14,13),12),11),((7,(((9,8),5),4)),(6,3))),(10,2)))));
   tree tree_19 [p = 0.004, P = 0.986] = [&W 0.003998] ((37,36),(((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),(1,(((((14,13),12),11),(7,((((9,8),5),4),(6,3)))),(10,2)))));
   tree tree_20 [p = 0.004, P = 0.990] = [&W 0.003731] ((37,36),(((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),((((((24,23),(25,22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),(1,(((((14,13),12),11),((7,(((9,8),5),4)),(6,3))),(10,2)))));
   tree tree_21 [p = 0.003, P = 0.993] = [&W 0.003198] (((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),((37,36),(1,(((12,((14,13),11)),((7,(((9,8),5),4)),(6,3))),(10,2)))));
   tree tree_22 [p = 0.002, P = 0.995] = [&W 0.002132] (((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),((37,36),(1,((((14,13),12),11),(((7,(((9,8),5),4)),(6,3)),(10,2))))));
   tree tree_23 [p = 0.001, P = 0.996] = [&W 0.001066] ((37,36),(((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),(1,(((12,((14,13),11)),((7,(((9,8),5),4)),(6,3))),(10,2)))));
   tree tree_24 [p = 0.001, P = 0.997] = [&W 0.000800] (((37,36),((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15)))))),(1,(((12,((14,13),11)),((7,(((9,8),5),4)),(6,3))),(10,2))));
   tree tree_25 [p = 0.001, P = 0.998] = [&W 0.000800] ((((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15)))),((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),((37,36),(1,(((((14,13),12),11),((7,(((9,8),5),4)),(6,3))),(10,2))))));
   tree tree_26 [p = 0.001, P = 0.999] = [&W 0.000800] (((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),((((((24,23),(25,22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),((37,36),(1,(((((14,13),12),11),((7,(((9,8),5),4)),(6,3))),(10,2)))));
   tree tree_27 [p = 0.001, P = 0.999] = [&W 0.000533] (((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15))))),((37,36),(1,(((((14,13),12),11),((7,((9,8),5)),(4,(6,3)))),(10,2)))));
   tree tree_28 [p = 0.000, P = 0.999] = [&W 0.000267] (((37,36),((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15)))))),(1,(((((14,13),12),11),(7,((((9,8),5),4),(6,3)))),(10,2))));
   tree tree_29 [p = 0.000, P = 1.000] = [&W 0.000267] (((37,36),((((47,46),45),((50,(49,48)),(42,(((44,43),41),((40,39),38))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15)))))),(1,(((((14,13),12),11),((((9,8),5),4),(7,(6,3)))),(10,2))));
   tree tree_30 [p = 0.000, P = 1.000] = [&W 0.000267] (1,(((37,36),((((47,46),45),((50,(49,48)),(42,(((44,43),41),(40,(39,38)))))),(((((25,((24,23),22)),21),(19,18)),(20,17)),(((((35,34),33),(32,31)),(30,29)),(((28,27),26),(16,15)))))),(((((14,13),12),11),((((9,8),5),4),(7,(6,3)))),(10,2))));
end;
