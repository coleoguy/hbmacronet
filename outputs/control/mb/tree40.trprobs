#NEXUS

[ID: 1897717875]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 2,
    2 29,
    3 1,
    4 37,
    5 32,
    6 33,
    7 8,
    8 41,
    9 48,
   10 3,
   11 4,
   12 49,
   13 7,
   14 44,
   15 50,
   16 23,
   17 24,
   18 6,
   19 34,
   20 15,
   21 19,
   22 20,
   23 5,
   24 18,
   25 16,
   26 17,
   27 31,
   28 30,
   29 21,
   30 22,
   31 45,
   32 42,
   33 43,
   34 36,
   35 35,
   36 40,
   37 46,
   38 47,
   39 13,
   40 14,
   41 11,
   42 12,
   43 38,
   44 39,
   45 25,
   46 27,
   47 28,
   48 10,
   49 9,
   50 26;
   tree tree_1 [p = 0.310, P = 0.310] = [&W 0.310235] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_2 [p = 0.186, P = 0.497] = [&W 0.186301] ((((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2))));
   tree tree_3 [p = 0.100, P = 0.596] = [&W 0.099680] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_4 [p = 0.088, P = 0.685] = [&W 0.088486] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((14,(8,(13,7))),(12,(6,5))))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_5 [p = 0.051, P = 0.736] = [&W 0.051439] (((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2))));
   tree tree_6 [p = 0.024, P = 0.760] = [&W 0.023987] ((((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((14,(8,(13,7))),(12,(6,5))))))),(((30,29),(28,27)),((4,(3,1)),2))));
   tree tree_7 [p = 0.023, P = 0.783] = [&W 0.022921] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(4,(((30,29),(28,27)),((3,1),2))))));
   tree tree_8 [p = 0.020, P = 0.803] = [&W 0.020256] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((14,12),((8,(13,7)),(6,5))))))),(4,(((30,29),(28,27)),((3,1),2))))));
   tree tree_9 [p = 0.020, P = 0.823] = [&W 0.019723] (((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((14,(8,(13,7))),(12,(6,5))))))),(((30,29),(28,27)),((4,(3,1)),2))));
   tree tree_10 [p = 0.019, P = 0.842] = [&W 0.018923] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((14,(8,(13,7))),(12,(6,5))))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_11 [p = 0.014, P = 0.856] = [&W 0.013593] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((22,21),(((24,23),19),(20,18))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_12 [p = 0.013, P = 0.868] = [&W 0.012527] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((22,21),(19,((24,23),(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_13 [p = 0.012, P = 0.880] = [&W 0.012260] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(4,((((30,29),(28,27)),(3,1)),2)))));
   tree tree_14 [p = 0.011, P = 0.892] = [&W 0.011194] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(4,((3,1),(((30,29),(28,27)),2))))));
   tree tree_15 [p = 0.009, P = 0.901] = [&W 0.009062] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((22,21),(24,(19,(23,(20,18))))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_16 [p = 0.008, P = 0.909] = [&W 0.008262] ((((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((11,10),9),(((26,25),(17,16)),((14,(8,(13,7))),((15,12),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2))));
   tree tree_17 [p = 0.008, P = 0.917] = [&W 0.007729] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((22,21),(19,((24,23),(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_18 [p = 0.007, P = 0.924] = [&W 0.007196] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),((((26,25),(17,16)),((11,10),9)),(15,((12,(14,(8,(13,7)))),(6,5))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_19 [p = 0.006, P = 0.930] = [&W 0.006397] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),((((26,25),(17,16)),((11,10),9)),(15,((12,(14,(8,(13,7)))),(6,5))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_20 [p = 0.005, P = 0.935] = [&W 0.004531] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((22,21),(19,((24,23),(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((14,(8,(13,7))),(12,(6,5))))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_21 [p = 0.004, P = 0.939] = [&W 0.004264] (((33,32),31),(((((((47,46),(50,45)),((49,48),(44,43))),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(4,(((30,29),(28,27)),((3,1),2))))));
   tree tree_22 [p = 0.004, P = 0.943] = [&W 0.004264] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((22,21),(((24,23),19),(20,18))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),(4,((3,1),2))))));
   tree tree_23 [p = 0.004, P = 0.947] = [&W 0.004264] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((22,21),(19,((24,23),(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((14,(8,(13,7))),(12,(6,5))))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_24 [p = 0.004, P = 0.952] = [&W 0.004264] ((((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((11,10),9),(((26,25),(17,16)),((14,(8,(13,7))),(15,(12,(6,5))))))),(((30,29),(28,27)),((4,(3,1)),2))));
   tree tree_25 [p = 0.004, P = 0.956] = [&W 0.003998] (((33,32),31),(((((((47,46),(50,45)),((49,48),(44,43))),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((22,21),(19,((24,23),(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_26 [p = 0.004, P = 0.959] = [&W 0.003731] (((33,32),31),(((((((47,46),(50,45)),((49,48),(44,43))),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(4,((((30,29),(28,27)),(3,1)),2)))));
   tree tree_27 [p = 0.003, P = 0.963] = [&W 0.003198] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((22,21),(24,(19,(23,(20,18))))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_28 [p = 0.003, P = 0.966] = [&W 0.003198] ((((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,(12,((14,(8,(13,7))),(6,5))))))),(((30,29),(28,27)),((4,(3,1)),2))));
   tree tree_29 [p = 0.003, P = 0.969] = [&W 0.003198] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((22,21),(19,((24,23),(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((3,1),(4,2))))));
   tree tree_30 [p = 0.003, P = 0.972] = [&W 0.002665] (((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),((14,(8,(13,7))),((15,12),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2))));
   tree tree_31 [p = 0.003, P = 0.974] = [&W 0.002665] (((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((14,(8,(13,7))),(12,(6,5))))))),(((30,29),(28,27)),((3,1),(4,2)))));
   tree tree_32 [p = 0.002, P = 0.977] = [&W 0.002399] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,(12,((14,(8,(13,7))),(6,5))))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_33 [p = 0.002, P = 0.979] = [&W 0.002399] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((22,21),(24,(23,(19,(20,18))))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_34 [p = 0.002, P = 0.982] = [&W 0.002399] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((22,21),((24,23),(19,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((3,1),(4,2))))));
   tree tree_35 [p = 0.002, P = 0.984] = [&W 0.002399] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((22,21),(((24,23),19),(20,18))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_36 [p = 0.002, P = 0.986] = [&W 0.001866] ((((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),((14,(8,(13,7))),((15,12),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2))));
   tree tree_37 [p = 0.002, P = 0.987] = [&W 0.001599] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,(12,((14,(8,(13,7))),(6,5))))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_38 [p = 0.001, P = 0.989] = [&W 0.001333] (((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(((15,12),(14,(8,(13,7)))),(6,5))))),(((30,29),(28,27)),((4,(3,1)),2))));
   tree tree_39 [p = 0.001, P = 0.990] = [&W 0.001333] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((14,(8,(13,7))),(12,(6,5))))))),(((30,29),(28,27)),((3,1),(4,2))))));
   tree tree_40 [p = 0.001, P = 0.991] = [&W 0.001333] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((24,(22,21)),(23,(19,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_41 [p = 0.001, P = 0.993] = [&W 0.001333] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((22,21),(24,(19,(23,(20,18))))),(((26,25),(17,16)),(((11,10),9),(15,((14,(8,(13,7))),(12,(6,5))))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_42 [p = 0.001, P = 0.994] = [&W 0.001066] (((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((3,1),(4,2)))));
   tree tree_43 [p = 0.001, P = 0.995] = [&W 0.001066] ((32,(33,31)),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_44 [p = 0.001, P = 0.996] = [&W 0.001066] ((((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),((14,(8,(13,7))),(15,(12,(6,5))))))),(((30,29),(28,27)),((4,(3,1)),2))));
   tree tree_45 [p = 0.001, P = 0.997] = [&W 0.000533] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((14,(8,(13,7))),(12,(6,5))))))),(((30,29),(28,27)),((3,1),(4,2))))));
   tree tree_46 [p = 0.001, P = 0.997] = [&W 0.000533] (((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),((((26,25),(17,16)),((11,10),9)),(15,((12,(14,(8,(13,7)))),(6,5))))),(((30,29),(28,27)),((4,(3,1)),2))));
   tree tree_47 [p = 0.001, P = 0.998] = [&W 0.000533] ((((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((33,32),31)),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(4,((3,1),(((30,29),(28,27)),2)))));
   tree tree_48 [p = 0.001, P = 0.998] = [&W 0.000533] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(23,(19,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_49 [p = 0.001, P = 0.999] = [&W 0.000533] (((33,32),31),((((42,41),((((49,48),((47,46),(50,45))),(44,43)),(40,39))),((38,37),(36,(35,34)))),((((22,21),((24,23),(19,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),(4,((3,1),2))))));
   tree tree_50 [p = 0.001, P = 0.999] = [&W 0.000533] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((22,21),(24,(19,(23,(20,18))))),(((26,25),(17,16)),(((11,10),9),(15,((14,(8,(13,7))),(12,(6,5))))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_51 [p = 0.000, P = 0.999] = [&W 0.000267] (((33,32),31),(((((((49,48),((47,46),(50,45))),(44,43)),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),((((30,29),28),27),((4,(3,1)),2)))));
   tree tree_52 [p = 0.000, P = 1.000] = [&W 0.000267] (((33,32),31),(((((((47,46),(50,45)),((49,48),(44,43))),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((12,(14,(8,(13,7)))),(6,5)))))),(((30,29),(28,27)),((4,(3,1)),2)))));
   tree tree_53 [p = 0.000, P = 1.000] = [&W 0.000267] (((33,32),31),(((((((47,46),(50,45)),((49,48),(44,43))),(42,41)),(40,39)),((38,37),(36,(35,34)))),((((24,(22,21)),(19,(23,(20,18)))),(((26,25),(17,16)),(((11,10),9),(15,((14,(8,(13,7))),(12,(6,5))))))),(4,((((30,29),(28,27)),(3,1)),2)))));
end;
