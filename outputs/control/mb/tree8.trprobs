#NEXUS

[ID: 0207010522]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 47,
    2 48,
    3 3,
    4 4,
    5 37,
    6 46,
    7 41,
    8 42,
    9 50,
   10 7,
   11 8,
   12 34,
   13 16,
   14 17,
   15 32,
   16 27,
   17 38,
   18 28,
   19 40,
   20 21,
   21 33,
   22 22,
   23 36,
   24 49,
   25 11,
   26 26,
   27 24,
   28 12,
   29 25,
   30 29,
   31 30,
   32 19,
   33 1,
   34 2,
   35 43,
   36 44,
   37 13,
   38 20,
   39 23,
   40 14,
   41 18,
   42 31,
   43 39,
   44 45,
   45 10,
   46 15,
   47 5,
   48 6,
   49 9,
   50 35;
   tree tree_1 [p = 0.704, P = 0.704] = [&W 0.704424] (((((50,(48,47)),(46,(49,45))),44),((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,(6,((18,16),((21,(22,20)),((23,19),(17,5)))))))),(4,3))),(1,2));
   tree tree_2 [p = 0.118, P = 0.822] = [&W 0.118070] (((((50,(48,47)),(46,(49,45))),44),((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,((18,16),(6,((21,(22,20)),((23,19),(17,5)))))))),(4,3))),(1,2));
   tree tree_3 [p = 0.055, P = 0.877] = [&W 0.054904] ((((50,((48,47),(46,(49,45)))),44),((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,(6,((18,16),((21,(22,20)),((23,19),(17,5)))))))),(4,3))),(1,2));
   tree tree_4 [p = 0.045, P = 0.922] = [&W 0.044510] (((((50,(48,47)),(46,(49,45))),44),((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,(6,((18,16),((23,19),((21,(22,20)),(17,5)))))))),(4,3))),(1,2));
   tree tree_5 [p = 0.022, P = 0.943] = [&W 0.021588] (((((50,(48,47)),(46,(49,45))),44),((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,((18,16),(6,((23,19),((21,(22,20)),(17,5)))))))),(4,3))),(1,2));
   tree tree_6 [p = 0.013, P = 0.957] = [&W 0.013326] (((((50,(48,47)),(46,(49,45))),44),((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,(6,((18,16),(((21,(22,20)),(23,19)),(17,5))))))),(4,3))),(1,2));
   tree tree_7 [p = 0.010, P = 0.967] = [&W 0.010128] ((((50,((48,47),(46,(49,45)))),44),((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,((18,16),(6,((21,(22,20)),((23,19),(17,5)))))))),(4,3))),(1,2));
   tree tree_8 [p = 0.009, P = 0.976] = [&W 0.008795] (((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,(6,((18,16),((21,(22,20)),((23,19),(17,5)))))))),(4,3)),((((50,(48,47)),(46,(49,45))),44),(1,2)));
   tree tree_9 [p = 0.006, P = 0.981] = [&W 0.005597] (((((50,(48,47)),(46,(49,45))),44),((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(40,(41,37)))),((36,35),(43,(42,15))))),(24,(6,((18,16),((21,(22,20)),((23,19),(17,5)))))))),(4,3))),(1,2));
   tree tree_10 [p = 0.005, P = 0.986] = [&W 0.004531] ((((((50,(48,47)),(46,(49,45))),44),(((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,(6,((18,16),((21,(22,20)),((23,19),(17,5))))))))),(4,3)),(1,2));
   tree tree_11 [p = 0.004, P = 0.990] = [&W 0.003998] (((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,(6,((18,16),((23,19),((21,(22,20)),(17,5)))))))),((((50,(48,47)),(46,(49,45))),44),(4,3))),(1,2));
   tree tree_12 [p = 0.002, P = 0.992] = [&W 0.001866] ((((50,((48,47),(46,(49,45)))),44),((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,(6,((18,16),((23,19),((21,(22,20)),(17,5)))))))),(4,3))),(1,2));
   tree tree_13 [p = 0.002, P = 0.994] = [&W 0.001866] (((((50,(48,47)),(46,(49,45))),44),((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,((41,40),37))),((36,35),(43,(42,15))))),(24,(6,((18,16),((21,(22,20)),((23,19),(17,5)))))))),(4,3))),(1,2));
   tree tree_14 [p = 0.002, P = 0.995] = [&W 0.001599] (((((50,(48,47)),(46,(49,45))),44),((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,((41,40),37))),((36,35),(43,(42,15))))),(24,(6,((18,16),((23,19),((21,(22,20)),(17,5)))))))),(4,3))),(1,2));
   tree tree_15 [p = 0.002, P = 0.997] = [&W 0.001599] (((((50,(48,47)),(46,(49,45))),44),((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),((24,6),((18,16),((21,(22,20)),((23,19),(17,5))))))),(4,3))),(1,2));
   tree tree_16 [p = 0.001, P = 0.998] = [&W 0.000800] (((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,(6,((18,16),((21,(22,20)),((23,19),(17,5)))))))),(4,3)),(((50,((48,47),(46,(49,45)))),44),(1,2)));
   tree tree_17 [p = 0.001, P = 0.998] = [&W 0.000533] ((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,((18,16),(6,((21,(22,20)),((23,19),(17,5)))))))),((4,3),((((50,(48,47)),(46,(49,45))),44),(1,2))));
   tree tree_18 [p = 0.001, P = 0.999] = [&W 0.000533] ((((((50,(48,47)),(46,(49,45))),44),(((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,(6,((18,16),((23,19),((21,(22,20)),(17,5))))))))),(4,3)),(1,2));
   tree tree_19 [p = 0.001, P = 0.999] = [&W 0.000533] (((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,((18,16),(6,((21,(22,20)),((23,19),(17,5)))))))),(4,3)),((((50,(48,47)),(46,(49,45))),44),(1,2)));
   tree tree_20 [p = 0.000, P = 0.999] = [&W 0.000267] ((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),(24,(6,((18,16),((21,(22,20)),((23,19),(17,5)))))))),((4,3),((((50,(48,47)),(46,(49,45))),44),(1,2))));
   tree tree_21 [p = 0.000, P = 1.000] = [&W 0.000267] (((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),((24,6),((18,16),((23,19),((21,(22,20)),(17,5))))))),((((50,(48,47)),(46,(49,45))),44),(4,3))),(1,2));
   tree tree_22 [p = 0.000, P = 1.000] = [&W 0.000267] (((((50,(48,47)),(46,(49,45))),44),((((((14,13),(12,(11,10))),9),(8,7)),(((((34,33),32),((29,(31,(28,26))),((30,27),25))),((38,(39,(41,(40,37)))),((36,35),(43,(42,15))))),((24,6),((18,16),((23,19),((21,(22,20)),(17,5))))))),(4,3))),(1,2));
end;
