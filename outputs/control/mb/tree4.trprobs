#NEXUS

[ID: 0595012096]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 49,
    2 50,
    3 6,
    4 7,
    5 30,
    6 31,
    7 46,
    8 14,
    9 15,
   10 29,
   11 45,
   12 13,
   13 20,
   14 23,
   15 12,
   16 22,
   17 34,
   18 35,
   19 39,
   20 5,
   21 1,
   22 2,
   23 3,
   24 4,
   25 44,
   26 32,
   27 33,
   28 41,
   29 10,
   30 11,
   31 25,
   32 38,
   33 40,
   34 27,
   35 36,
   36 37,
   37 24,
   38 26,
   39 16,
   40 17,
   41 8,
   42 9,
   43 28,
   44 19,
   45 18,
   46 21,
   47 42,
   48 43,
   49 47,
   50 48;
   tree tree_1 [p = 0.564, P = 0.564] = [&W 0.563699] (((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),(((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((40,39),((36,((35,(38,34)),33)),(32,(37,31)))),(((30,29),(28,(27,26))),25)))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_2 [p = 0.116, P = 0.680] = [&W 0.116471] (((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((40,39),((36,((35,(38,34)),33)),(32,(37,31)))),(((30,29),(28,(27,26))),25)))),(((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_3 [p = 0.070, P = 0.750] = [&W 0.069563] ((((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((40,39),((36,((35,(38,34)),33)),(32,(37,31)))),(((30,29),(28,(27,26))),25)))),((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12))))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2))));
   tree tree_4 [p = 0.061, P = 0.811] = [&W 0.061034] (((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),(((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((40,39),((36,((35,(38,34)),33)),(32,(37,31)))),(((30,29),(28,(27,26))),25)))),(((11,(10,(9,8))),(7,(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_5 [p = 0.048, P = 0.859] = [&W 0.048241] (((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((40,39),((36,((35,(38,34)),33)),(32,(37,31)))),(((30,29),(28,(27,26))),25)))),(((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),(((11,(10,(9,8))),(7,(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_6 [p = 0.042, P = 0.901] = [&W 0.042377] (((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),(((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((36,((35,(38,34)),33)),(32,(37,31))),((40,39),(((30,29),(28,(27,26))),25))))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_7 [p = 0.017, P = 0.919] = [&W 0.017324] (((((22,(21,20)),19),(18,17)),((16,14),(15,(13,12)))),(((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((40,39),((36,((35,(38,34)),33)),(32,(37,31)))),(((30,29),(28,(27,26))),25)))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_8 [p = 0.014, P = 0.933] = [&W 0.013859] (((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((36,((35,(38,34)),33)),(32,(37,31))),((40,39),(((30,29),(28,(27,26))),25))))),(((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),(((11,(10,(9,8))),(7,(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_9 [p = 0.011, P = 0.944] = [&W 0.011194] ((((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((40,39),((36,((35,(38,34)),33)),(32,(37,31)))),(((30,29),(28,(27,26))),25)))),((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12))))),(((11,(10,(9,8))),(7,(6,(5,(4,3))))),((24,23),(1,2))));
   tree tree_10 [p = 0.011, P = 0.954] = [&W 0.010661] (((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),(((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((36,((35,(38,34)),33)),(32,(37,31))),((40,39),(((30,29),(28,(27,26))),25))))),(((11,(10,(9,8))),(7,(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_11 [p = 0.010, P = 0.965] = [&W 0.010128] (((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),(((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((40,39),((36,((35,(38,34)),33)),(32,(37,31)))),((30,29),((28,(27,26)),25))))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_12 [p = 0.007, P = 0.972] = [&W 0.007463] (((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((40,39),((36,((35,(38,34)),33)),(32,(37,31)))),((30,29),((28,(27,26)),25))))),(((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_13 [p = 0.007, P = 0.979] = [&W 0.006663] ((((50,49),(48,47)),(46,(45,44))),(((43,(42,41)),(((40,39),((36,((35,(38,34)),33)),(32,(37,31)))),(((30,29),(28,(27,26))),25))),(((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2))))));
   tree tree_14 [p = 0.006, P = 0.984] = [&W 0.005597] (((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),(((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((40,39),(((35,(38,34)),(36,33)),(32,(37,31)))),(((30,29),(28,(27,26))),25)))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_15 [p = 0.005, P = 0.989] = [&W 0.004797] (((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((36,((35,(38,34)),33)),(32,(37,31))),((40,39),(((30,29),(28,(27,26))),25))))),(((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_16 [p = 0.003, P = 0.992] = [&W 0.002932] (((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((36,((35,(38,34)),33)),(32,(37,31))),((40,39),((30,29),((28,(27,26)),25)))))),(((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_17 [p = 0.002, P = 0.994] = [&W 0.002399] (((((22,(21,20)),19),(18,17)),((16,14),(15,(13,12)))),(((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((36,((35,(38,34)),33)),(32,(37,31))),((40,39),(((30,29),(28,(27,26))),25))))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_18 [p = 0.002, P = 0.996] = [&W 0.001599] (((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),(((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((40,39),((36,((35,(38,34)),33)),(32,(37,31)))),((28,(27,26)),((30,29),25))))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_19 [p = 0.002, P = 0.998] = [&W 0.001599] ((((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((36,((35,(38,34)),33)),(32,(37,31))),((40,39),(((30,29),(28,(27,26))),25))))),((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12))))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2))));
   tree tree_20 [p = 0.001, P = 0.999] = [&W 0.001066] (((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),(((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((36,((35,(38,34)),33)),(32,(37,31))),((40,39),((30,29),((28,(27,26)),25)))))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_21 [p = 0.001, P = 0.999] = [&W 0.000800] (((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((40,39),((36,((35,(38,34)),33)),(32,(37,31)))),(((30,29),(28,(27,26))),25)))),(((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),((((11,(10,(9,8))),7),(6,(5,(4,3)))),((24,23),(1,2)))));
   tree tree_22 [p = 0.000, P = 1.000] = [&W 0.000267] (((((21,(22,20)),19),(18,17)),((16,14),(15,(13,12)))),(((((50,49),(48,47)),(46,(45,44))),((43,(42,41)),(((40,39),(32,((36,((35,(38,34)),33)),(37,31)))),(((30,29),(28,(27,26))),25)))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
   tree tree_23 [p = 0.000, P = 1.000] = [&W 0.000267] (((((22,(21,20)),19),(18,17)),((16,14),(15,(13,12)))),((((49,(50,(48,47))),(46,(45,44))),((43,(42,41)),(((36,((35,(38,34)),33)),(32,(37,31))),((40,39),(((30,29),(28,(27,26))),25))))),((7,((11,(10,(9,8))),(6,(5,(4,3))))),((24,23),(1,2)))));
end;
